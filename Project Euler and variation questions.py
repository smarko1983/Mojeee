

# *******************************************************************************************************************************
# Project Euler question 1
# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.

# it works, tested
# total = 0
# for i in range(1, 1000):
#     if i % 3 == 0   or  i % 5 == 0:
#         total += i
#     print(total)


# my modification of the problem above: print all the numbers up to 1000 which are divisible by 3 or 5
# total = 0
# i = 0
# while total < 1000:
#     i += 1
#     if i % 3 == 0 or i % 5 == 0:
#         print("i is: ", i)
#         if total >= 1000:
#             break
#         print("total is: ", total)
#         total += i

# *******************************************************************************************************************************


# *******************************************************************************************************************************
# Project Euler Question 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# it works, tested
# a = 0
# b = 1
# fib = 0
# target = 4_000_000
# sum = 0
#
# while fib < target:
#     fib = a + b
#     a = b
#     b = fib
#     if fib >= target:
#         break
#     if fib % 2 == 0:
#         sum = sum + fib
#     print(sum)

# *******************************************************************************************************************************


# *******************************************************************************************************************************

# Project Euler problem 3

# The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143 ?

# largest prime divisor - finally, after almost 2 days!
# num = 12
# product = 1
# divisor = 1
#
# while product != num and divisor < num:  # I plan to multiply prime factors to get the num
#     divisor += 1
#
#     # 1st checking if it is divisible by divisor
#     if num % divisor == 0:
#
#         # now checking if that number is a prime
#         for i in range(2, divisor + 1):
#             if divisor % i == 0 and i != divisor and i != 1:  # this means that it is not a prime number
#                 prime = False
#             else:
#                 prime = True
#
#         if prime:
#             prime = divisor
#             num = num / divisor
#             print("num is: ", num)
#             product *= prime
#             print("The PRODUCT IN FOR LOOP is: ", product)
#
# print("The largest prime is", prime)

# Check if a number is prime formula
# num = int(input("Please enter a num: "))
# prime = False
#
# for i in range(2, num):
#     if num % i == 0 and i != 2:
#         prime = False
#         break
#     else:
#         prime = True
#
#
#
# if prime:
#     print("it's a prime")
# else:
#     print("It's not a prime")


# multiplying numbers in a list
# product = 1
# for k in [2,5,7,10]:
#     product *= k
#
# print(product)


# *******************************************************************************
# These are some of he variations that came to mind which I can use to test
# my students; NOT PROJECT EULER

# with this solution, my CPU will die :)))
# also, this solution works for this number,
# but not for the , let's say, 800....because it is finding the DIVISORS, but
# not PRIME FACTORS
# A question would be something like:
# Find all the divisors of 800
# num = 800
# for i in range(2, num):
#     if num % i == 0:
#         factor = i
#         print(factor)


# This program finds the SMALLEST FACTOR
# num = 900
# for i in range(num - 1 , 2, -1):
#     if num % i == 0:
#         num = num / i
#         largest_factor = i
#         print(largest_factor)


# *******************************************************************************

# one way
# year = int(input("enter a year:  "))
#
# if (year % 100 == 0 and year % 4 == 0)    and (year % 400 != 0):
#     print("not a leap year")
# elif (year % 4 == 0 and year % 100 != 0)  or year % 400 == 0:
#     print("leap year")


# 2nd way- this is a good way if you want to have only one print
# year = int(input("enter a year:  "))
# leap_year = True
# if year % 4 == 0:
#     leap_year = True
#     if year % 400 ==0:
#         leap_year = True
#     else:
#         if year % 100 == 0:
#             leap_year = False
# else:
#     leap_year = False
#
# if leap_year is False:
#     print("not a leap year")
# else:
#     print("leap year")

# *******************************************************************************


# The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143 ?

# version 1 - I had problems with temporary state variable
# target = 600851475143
# product = 1
# divisor = 2
#
# while product != target:
#     if target % divisor == 0:           # checking if its a multiple of target
#         for i in range(2, divisor + 1):  # checking if its a prime number
#             if divisor % i != 0 and divisor != 2:
#                 prime = divisor
#                 product *= prime
#                 target = target / prime
#                 print("The largest prime iiiiiiiiis: ", prime)
#                 break
#     else:
#         divisor += 1

# version 2   - https://stackoverflow.com/questions/15347174/python-finding-prime-factors
# try it with n = 60
# n =  600851475143000000000300000554000000000456456734984369847369483674938763487693479684736987349673496743867349674398679348769347694376984736973469734698798438734575973598347573498573498573495793478349678934760340694730694736073460943634643634634634634634967349673496734967483760000000000007000151

# n = 600851475143
# i = 2


# this condition i * i < n rocks!
# Explanation: https://math.stackexchange.com/questions/102755/requireenclose-enclosehorizontalstrike-rm-greatest
# -least-prime-factor
# while i * i < n:
#     while n % i == 0:
#         n = n / i
#     i = i + 1
#
# print (int(n))





# with this n, impossible to do it under 2 minutes
# n =  600851475143000000000300000554000000000456456734984369847369483674938763487693479684736987349673496743867349674398679348769347694376984736973469734698798438734575973598347573498573498573495793478349678934760340694730694736073460943634643634634634634634967349673496734967483760000000000007000151




# multiplication table
# n=int(input('Please enter a positive integer between 1 and 15: '))
# for row in range(1,n+1):
#     for col in range(1,n+1):
#         print(row*col, end="\t")
#     print("")


